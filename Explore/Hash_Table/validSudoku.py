class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        """
        Use the index of the last element in every block as the index in the hash map
        E.g.
        (0, 'row') -> 0th row
        ('col', 0) -> 0th column
        (2, 2) -> 1st 3x3 block (top-left), generated by the function block_index
        """

        hash_table = collections.defaultdict(set)
        block_index = lambda i, j: (i//3, j//3)

        for i in range(len(board)):
            for j in range(len(board[0])):
                
                num = board[i][j]

                if num == '.':
                    continue

                if num in hash_table[(i ,'row')] or num in hash_table[('col', j)] or num in hash_table[block_index(i, j)]:
                    return False
                
                hash_table[(i ,'row')].add(num)
                hash_table[('col', j)].add(num)
                hash_table[block_index(i, j)].add(num)

        return True